TODO: Write test scripts
TODO: Static analysis tools
TODO: Follow TDD Approach

BUG
TODO: App is getting crash when opening The Complete poetical works by edgar Allan Poe [crash screenshot is available]
TODO: Downloader show check if file is already downloaded no need to add for pending downloads

Expected
TODO: make single point for all the request in book details like for metadata, track and enhanced data call
TODO: playing book screen*
TODO: listen later feature
TODO: local download/save book feature
TODO: Offline playing option for downloaded audio file.
                                      - Check whether file is downloaded or not.
                                      - If downloaded play local file
                                      - else online stream
TODO: navigation drawer for downloads, help, Licenses and Attribution
TODO: Bottom Navigation for Books, listen later[login for cloud save], analytics feature[login for cloud save].

Optional
TODO: Download feature
              - Download book wise
TODO: Palette API to render color based on dormant color in image
TODO: alert to play book based on users daily commute time and activity.[Transition API]
TODO: Japanese language support, english
TODO: new book available alert[Service]
TODO: Analysis feature[hours played, books played, fav book, bookmark book,watch later list][Analytics]
TODO: save app data online [google drive apps folder and local]
TODO: Book Library management screen
                                - If offline direct navigate to here.
                                - Show list of books downloaded
                                - Show list of book book marked and show visual sign if it is downloaded to make it concise.
                                - delete and re-download option
                                - Take example of Podcast subscribed screen for example.
                                - Master detail screen is good.

TODO:  LibriVox API integration
                                      - don't call the LibriVox api if data is already present in the database.
                                      - use mediator livedata for RxJava for combining results.
                                      - Add total book hours to be played for each book in details screen

To generate a dependency graph run below commands
1. gradlew projectDependencyGraph
2. open file in \build\reports\dependency-graph from parent folder
3. Open URL (http://www.webgraphviz.com/) and past the data generated in dot file in step 2.
4. Download  and you are done.