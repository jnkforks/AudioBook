import com.allsoftdroid.buildsrc.AndroidConfig
import com.allsoftdroid.buildsrc.BuildTypeDebug
import com.allsoftdroid.buildsrc.BuildTypeRelease
import com.allsoftdroid.buildsrc.DataBinding
import com.allsoftdroid.buildsrc.LibraryDependency
import com.allsoftdroid.buildsrc.ModuleDependency

apply plugin: GradlePluginId.ANDROID_LIBRARY
apply plugin: GradlePluginId.KOTLIN_ANDROID
apply plugin: GradlePluginId.KOTLIN_KAPT
apply plugin: GradlePluginId.KOTLIN_ANDROID_EXTENSIONS
apply plugin: GradlePluginId.SAFE_ARGS

android {
    compileSdkVersion AndroidConfig.COMPILE_SDK_VERSION

    defaultConfig {
        minSdkVersion(AndroidConfig.MIN_SDK_VERSION)
        targetSdkVersion(AndroidConfig.TARGET_SDK_VERSION)
        versionCode AndroidConfig.VERSION_CODE
        versionName AndroidConfig.VERSION_NAME

        testInstrumentationRunner(AndroidConfig.TEST_INSTRUMENTATION_RUNNER)
    }

    buildTypes {
        release {
            minifyEnabled BuildTypeRelease.isMinifyEnabled
//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled BuildTypeDebug.isMinifyEnabled
        }

        compileOptions {
            sourceCompatibility = JavaVersion.VERSION_1_8
            targetCompatibility = JavaVersion.VERSION_1_8
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    dataBinding{
        enabled = DataBinding.IS_ENABLED
    }

    testOptions.unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
}

dependencies {
    implementation(project(path: ModuleDependency.LIBRARY_COMMON))
    implementation(project(path: ModuleDependency.FEATURE_AUDIOBOOK_ENHANCE_DETAILS))
    implementation(project(path: ModuleDependency.DATABASE))
    implementation(project(path: ModuleDependency.SERVICES))

    implementation(LibraryDependency.GLIDE)
    kapt(LibraryDependency.GLIDE_COMPILER)
    implementation(LibraryDependency.KOIN_X_VIEWMODEL)
    implementation(LibraryDependency.BROWSER)
    implementation(LibraryDependency.LOTTIE)
    implementation(LibraryDependency.PALETTE)
    implementation(LibraryDependency.MATERIAL)
    implementation(LibraryDependency.LIFECYCLE_LIVEDATA_KTX)

    //Unit Testing
    testImplementation(TestLibraryDependency.JUNIT)
    testImplementation(TestLibraryDependency.HAMCREST)
    testImplementation(TestLibraryDependency.MOCKITO_CORE)
    testImplementation(TestLibraryDependency.COROUTINES_TEST)
    testImplementation(TestLibraryDependency.ANDROID_X_CORE_TESTING)

    //Instrumentation test
    androidTestImplementation(TestLibraryDependency.JUNIT)
    androidTestImplementation(TestLibraryDependency.COROUTINES_TEST)
    androidTestImplementation(TestLibraryDependency.ANDROID_X_EXT_TESTING)
    androidTestImplementation(TestLibraryDependency.ESPRESSO_CORE)
    androidTestImplementation(TestLibraryDependency.ESPRESSO_CONTRIB)
    androidTestImplementation(TestLibraryDependency.MOCKITO_CORE)
    androidTestImplementation(TestLibraryDependency.MOCKITO_DEXMAKER)

    implementation(TestLibraryDependency.FRAGMENT_TEST)
    implementation(TestLibraryDependency.ANDROID_X_CORE)

    kaptAndroidTest(TestLibraryDependency.DATA_BINDING_COMPILER){
        because("required to run instrumentation test")
    }
}
